[device]
name=rtx8000
# CUDA API
cuda_device_id=0
# NvidiaInspector
nvins_device_id=0
# nvidia-smi
nvsmi_device_id=0

[global]
# running time control to collect long-term info, e.g., power and dcgm
secs=12
# the interval between two benchmarks
rest_time=4
# power sampling interval, ms
power_sample_interval=100

[nvprof]
time_command = "nvprof --profile-child-processes"
setting_command = "nvprof --print-gpu-trace --profile-child processes"
metrics_command = "nvprof --metrics"
metrics = [
    "achieved_occupancy",
    "sm_efficiency",
    "warp_execution_efficiency",	
    "eligible_warps_per_cycle",
    "branch_efficiency",
    "cf_executed",
    "gld_throughput",
    "gld_transactions",
    "gld_transactions_per_request",
    "gst_throughput",
    "gst_transactions",
    "gst_transactions_per_request",
    "global_hit_rate",
    "dram_read_transactions",
    "dram_read_throughput",
    "dram_write_transactions",
    "dram_write_throughput",
    "l2_read_transactions",
    "l2_read_throughput",
    "l2_write_transactions",
    "l2_write_throughput",
    "shared_load_transactions",
    "shared_load_throughput",
    "shared_load_transactions_per_request",
    "shared_store_transactions",
    "shared_store_throughput",
    "shared_store_transactions_per_request",
    "l2_tex_read_throughput",
    "l2_tex_read_transactions",
    "l2_tex_write_throughput",
    "l2_tex_write_throughput",
    "tex_cache_hit_rate",
    "tex_cache_throughput",
    "tex_cache_transactions",
    "flop_count_dp",
    "flop_count_dp_fma",
    "flop_count_sp",
    "flop_count_sp_fma",
    "flop_count_sp_special",
    "inst_integer",
    "inst_fp_32",
    "inst_fp_64",
    "inst_executed",
    "inst_per_warp",
    "ipc"]

[dcgm]
metrics = [1002, 1003, 1004, 1005, 1006, 1007, 1008]

[dvfs_control]
coreBase = 0
memBase = 0
coreF = [705, 870, 945, 1110, 1215, 1305, 1410, 1500, 1605, 1710]
# the frequency of RTX 8000 is fixed
memF = [6500]
powerState = 0
# min:100, max:260
powerLim = 260

